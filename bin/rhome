#! /usr/bin/bash
#
# Script to restore my home folders from my Backup external hard drive

# Get the Backup external hard drive device + state (mounted or not)
# If the drive where to change DON'T FORGET to change the UUID
DEV=($(lsblk -o PATH,UUID,MOUNTPOINT | awk '/.*ac1149fc-d08d-46a2-8297-dd9fe0c9256d.*/{print $1 " " $3}'))
UNMOUNT=false

if [ -n "$DEV" ]; then
  # If not mounted, mount first then umount at the end
  if [ -z "${DEV[1]}" ]; then
    UNMOUNT=true
    MOUNTPOINT=/mnt

    echo "Mounting $DEV on $MOUNTPOINT..."
    sudo mount $DEV $MOUNTPOINT
    echo "Done!"
  else
    MOUNTPOINT=${DEV[1]}
    echo "Backup drive already mounted on $MOUNTPOINT!"
  fi

  # Restore important files
  echo "Restoring home files..."
  rsync -aP $MOUNTPOINT/.password-store $MOUNTPOINT/.ssh $MOUNTPOINT/calibre $MOUNTPOINT/documents $MOUNTPOINT/images $MOUNTPOINT/memories $MOUNTPOINT/nintendo $MOUNTPOINT/notes $MOUNTPOINT/wallets ~
  echo "Done!"

  # Creating the same directory as in the backup drive
  echo "Creating a few empty dirs..."
  mkdir -p ~/archives ~/ebooks
  echo "Done!"

	# Import the gpg private key
	if [ -f $MOUNTPOINT/privkey.asc ]; then
	  echo "Importing GPG master key..."
	  gpg --import $MOUNTPOINT/privkey.asc
	  echo "Done!"
	else
	  echo "GPG master key not present!"
	fi

  # Unmount if needed
  if [ "$UNMOUNT" = true ]; then
    echo "Unmounting $DEV..."
    sudo umount -l $MOUNTPOINT
    echo "Done!"
  fi

  exit
else
  # Backup device not found
  echo "Couldn't find Backup external drive!"
  exit 1
fi

#! /usr/bin/bash
#
# Script to backup my home folders to my Backup external hard drive

# Get the Backup external hard drive device + state (mounted or not)
# If the drive were to change DON'T FORGET to change the UUID
DEV=($(lsblk -o PATH,UUID,MOUNTPOINT | awk '/.*ac1149fc-d08d-46a2-8297-dd9fe0c9256d.*/{print $1 " " $3}'))
UNMOUNT=false

if [ -n "$DEV" ]; then
  # If not mounted, mount first then umount at the end
  if [ -z "${DEV[1]}" ]; then
    UNMOUNT=true
    MOUNTPOINT=/mnt

    echo "Mounting $DEV on $MOUNTPOINT..."
    sudo mount $DEV $MOUNTPOINT
    echo "Done!"
  else
    MOUNTPOINT=${DEV[1]}
    echo "Backup drive already mounted on $MOUNTPOINT!"
  fi

  # Backup important files
  echo "Backing up files..."
  rsync -avP ~/archive ~/ebooks ~/dev ~/documents ~/memories ~/wallets $MOUNTPOINT
  echo "Done!"

  # Save state of home dir
  echo "Saving home dir state..."
  rsync -avP ~/.password-store ~/.ssh ~/calibre ~/homelab ~/images ~/nintendo ~/notes ~/syncthing $MOUNTPOINT --delete
  echo "Done!"

	# Export the gpg private keys if file does not exist
	if [ ! -f $MOUNTPOINT/privkey.asc ]; then
	  echo "Exporting GPG master key..."
	  gpg --export-secret-keys --armor nils.bonfils@gmail.com > $MOUNTPOINT/privkey.asc
	  echo "Done!"
	else
	  echo "GPG master key already exported!"
	fi

  # Unmount if needed
  if [ "$UNMOUNT" = true ]; then
    echo "Unmounting $DEV..."
    sudo umount -l $MOUNTPOINT
    echo "Done!"
  fi

  exit
else
  # Backup device not found
  echo "Couldn't find Backup external drive!"
  exit 1
fi
